
import { GoogleGenAI, GenerateImagesResponse, GeneratedImage } from "@google/genai";

const API_KEY = process.env.API_KEY;

if (!API_KEY) {
  // This error will be caught by the App component and displayed to the user if thrown during initialization
  // However, it's better to handle this explicitly in the UI or prevent app load
  console.error("API_KEY is not set in environment variables.");
  // To make the app usable to some extent or show a clear message,
  // we might avoid throwing here and let the call fail later with a more specific message.
}

const ai = new GoogleGenAI({ apiKey: API_KEY! }); // API_KEY can be undefined, but the SDK expects string. The ! asserts it's provided.

export const generateImageFromPrompt = async (prompt: string): Promise<string> => {
  if (!API_KEY) {
    throw new Error("Gemini API key is missing. Please set API_KEY environment variable.");
  }
  
  try {
    const response: GenerateImagesResponse = await ai.models.generateImages({
      model: 'imagen-3.0-generate-002', // Using Imagen 3 as specified
      prompt: prompt,
      config: { 
        numberOfImages: 1, 
        outputMimeType: 'image/png' // Requesting PNG format
      },
    });

    if (!response.generatedImages || response.generatedImages.length === 0) {
      throw new Error('No images were generated by the API.');
    }

    const image: GeneratedImage = response.generatedImages[0];
    if (!image.image || !image.image.imageBytes) {
      throw new Error('Generated image data is missing or invalid.');
    }

    const base64ImageBytes: string = image.image.imageBytes;
    return `data:image/png;base64,${base64ImageBytes}`;

  } catch (error) {
    console.error('Gemini API error in generateImageFromPrompt:', error);
    if (error instanceof Error) {
      // More specific error handling can be added here based on error codes or messages from Gemini API
      if (error.message.includes('API key not valid')) {
         throw new Error('Invalid API Key. Please check your Gemini API Key.');
      }
      throw new Error(`API request failed: ${error.message}`);
    }
    throw new Error('An unknown error occurred while communicating with the Gemini API.');
  }
};
